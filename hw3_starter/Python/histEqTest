#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Feb 28 23:21:32 2024

@author: flash
"""

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg

def histogram_equalization(image_path):
    # Step 1: Load the grayscale image
    image = mpimg.imread(image_path)
    if image.ndim == 3:  # Convert RGB to grayscale
        image = np.dot(image[...,:3], [0.2989, 0.5870, 0.1140])

    # Step 2: Flatten the image to 1D array for histogram calculation
    flat_image = image.flatten()

    # Step 3: Calculate histogram of the image
    histogram, bins = np.histogram(flat_image, bins=256, range=[0,255])

    # Step 4: Calculate the cumulative distribution function (CDF)
    cdf = histogram.cumsum()
    cdf_normalized = 255 * cdf / cdf[-1]  # Normalize to [0, 255]

    # Step 5: Use the CDF to map the original pixel intensities to equalized values
    equalized_image = np.interp(flat_image, bins[:-1], cdf_normalized)
    equalized_image = equalized_image.reshape(image.shape)

    # Displaying the original and equalized images
    plt.figure(figsize=(10, 5))
    plt.subplot(1, 2, 1)
    plt.imshow(image, cmap='gray')
    plt.title('Original Image')
    plt.axis('off')

    plt.subplot(1, 2, 2)
    plt.imshow(equalized_image, cmap='gray')
    plt.title('Histogram Equalized Image')
    plt.axis('off')

    plt.show()

# Example usage
image_path = 'outputs/accumulator_hough_1.png'
histogram_equalization(image_path)
